<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spill.beans.dao.CommentDao">
  
  <resultMap type="CommentDTO" id="CommentMap">
    <id column="comment_no" property="no"/> 
    <result column="board_no" property="boardNo"/>
    <result column="content" property="content"/>
    <result column="created_dt" property="registeredDate"/>
    <result column="isPublic" property="isPublic"/>
    <result column="replyCount" property="replyCount"/>
    <result column="parent_comment_no" property="parentNo"/>
    <result column="group_no" property="groupNo"/>
    <result column="order_no" property="orderNo"/>
    <result column="class_no" property="classNo"/>
  
	  <association property="writer" javaType="MemberDTO">
	      <id column="member_no" property="no"/> 
	      <result column="nickname" property="nickname"/>
	      <result column="active" property="active"/>
	  </association>
  </resultMap>
  
  <sql id="select1">
      select
        b.board_no board_no,
        c.comment_no,
        c.content,
        c.created_dt,
        c.isPublic,
        c.replyCount,
        c.parent_comment_no,
        c.group_no,
        c.order_no,
        c.class_no,
        m.member_no member_no,
        m.nickname nickname,
        m.active active
     from comment c
       left outer join member m on m.member_no=c.member_no
       left outer join board b on b.board_no=c.board_no
  </sql>
  
  <select id="findAll" resultMap="CommentMap" parameterType="int">
   <include refid="select1"/>
   where
      c.board_no=#{boardNo} and class_no=0
   order by comment_no desc, group_no asc, order_no asc;
  </select>
  
  <select id="findByNo" resultMap="CommentMap" parameterType="int">
    <include refid="select1"/>
     where
       comment_no=#{commentNo}
  </select>
  
  <insert id="insertComment">
     insert into comment(board_no, member_no, content, isPublic, replyCount, parent_comment_no, group_no, class_no)
     values(#{boardNo}, #{comment.writer.no}, #{comment.content}, #{comment.isPublic}, #{comment.replyCount}, 0, 0, 0)
  </insert>
  
  <update id="update" parameterType="CommentDTO">
    update comment
     <set>
	     <if test="content != null">
	       content=#{content},
	     </if>
	     <if test="isPublic != 0">
	       isPublic=#{isPublic}
	     </if>
     </set>
    where
      comment_no=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from comment
    where
      comment_no=#{commentNo}
  </delete>
  
  <delete id="deleteByBoardNo" parameterType="int">
    delete from comment
    where
      board_no=#{boardNo}
  </delete>
  
  <delete id="deleteByMemberNo" parameterType="int">
    delete from comment
    where
      member_no=#{memberNo}
  </delete>
  
<!-- ************************** 답변 ************************** -->

  <sql id="select2">
      select
        b.board_no board_no,
        c.comment_no,
        c.content,
        c.created_dt,
        c.isPublic,
        c.replyCount,
        c.parent_comment_no,
        c.group_no,
        c.order_no,
        c.class_no,
        m.member_no member_no,
        m.nickname nickname,
        m.active active
     from comment c
       left outer join member m on m.member_no=c.member_no
       left outer join board b on b.board_no=c.board_no
  </sql>
  
  <select id="findAllReply" resultMap="CommentMap" parameterType="int">
   <include refid="select2"/>
   where
      c.board_no=#{boardNo} and class_no!=0
   order by comment_no desc, group_no asc, order_no asc;
  </select>

  <insert id="insertReply">
     insert into comment(board_no, member_no, content, isPublic, replyCount, parent_comment_no, group_no, class_no)
     values(#{boardNo}, #{comment.writer.no}, #{comment.content}, #{comment.isPublic}, #{comment.replyCount},
     #{comment.parentNo}, #{comment.groupNo}, #{comment.classNo})
  </insert>
  
</mapper>

