<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spill.beans.dao.BoardDao">
  
  <resultMap type="BoardDTO" id="BoardMap">
    <id column="board_no" property="no"/> 
    <result column="title" property="title"/>
    <result column="content" property="content"/>
    <result column="viewCount" property="viewCount"/>
    <result column="created_dt" property="registeredDate"/>
    <result column="likeCount" property="likeCount"/>
    <result column="commentCount" property="commentCount"/>
  
  <association property="writer" javaType="MemberDTO">
      <id column="member_no" property="no"/>
      <result column="nickname" property="nickname"/>
      <result column="email" property="email"/>
  </association>
  
  <association property="category" javaType="CategoryDTO">
      <id column="category_no" property="no"/>
      <result column="label" property="label"/>
  </association>
  
  </resultMap>
  
  <resultMap id="BoardLikeMap" type="BoardLikeDTO">
      <id column="board_no" property="boardNo"/>
      <id column="member_no" property="memberNo"/>
  </resultMap>
  
  <insert id="insert" parameterType="BoardDTO">
    insert into board(title,content,viewCount,likeCount,commentCount,category_no,member_no) 
    values(#{title},#{content},#{viewCount},#{likeCount},#{commentCount},#{category.no},#{writer.no})
  </insert>
  
   <select id="findAll" resultMap="BoardMap" parameterType="map">
    select
      b.board_no,
      b.title,
      b.content,
      b.viewCount,
      b.likeCount,
      b.commentCount,
      b.created_dt,
      b.category_no,
      m.member_no,
      m.nickname,
      m.email,
      c.label
    from
      board b
      inner join member m on b.member_no=m.member_no
      inner join category c on b.category_no=c.category_no
    order by
      b.board_no desc
      limit #{offset}, #{length}
  </select>
  
  <update id="updateCount" parameterType="int">
    update board set
      viewCount = viewCount + 1
    where board_no=#{no}
  </update>
  
  <update id="discount" parameterType="int">
    update board set
      viewCount = viewCount - 1
    where board_no=#{no}
  </update>
  
  <select id="findByNo" resultMap="BoardMap" parameterType="int">
    select
      b.board_no,
      b.title,
      b.content,
      b.viewCount,
      b.likeCount,
      b.created_dt,
      b.commentCount,
      m.member_no,
      m.nickname,
      m.email,
      c.label
    from
      board b
      inner join member m on b.member_no=m.member_no
      inner join category c on b.category_no=c.category_no
    where board_no=#{no}
  </select>
  
  <update id="update" parameterType="BoardDTO">
    update board set
      title=#{title},
      content=#{content}
    where 
      board_no=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from board 
    where board_no=#{no}
  </delete>
  
  <select id="count" resultType="int">
    select
      count(*)
    from board
  </select> 
  
   <select id="findByKeyword" resultMap="BoardMap" parameterType="String">
    select
      b.board_no,
      b.title,
      b.content,
      b.viewCount,
      b.likeCount,
      b.commentCount,
      b.created_dt,
      b.category_no,
      m.member_no,
      m.nickname,
      m.email,
      c.label
    from
      board b
      inner join member m on b.member_no=m.member_no
      inner join category c on b.category_no=c.category_no
    where
      ${option}
    order by
      b.board_no desc
  </select>
  
  <insert id="insertLike">
    insert into board_like(board_no,member_no) 
    values(#{boardNo},#{memberNo})
  </insert>
  
  <delete id="deleteLike">
    delete from board_like
    where board_no=#{boardNo} and member_no=#{memberNo}
  </delete>
  
  <update id="updateLikeCount" parameterType="int">
    update board set
      likeCount = likeCount + 1
    where board_no=#{no}
  </update>
  
  <update id="disLikecount" parameterType="int">
    update board set
      likeCount = likeCount - 1
    where board_no=#{no}
  </update>
  
  <select id="findLikeAll" resultMap="BoardLikeMap">
    select
      l.board_no,
      l.member_no
    from
      board_like l
  </select>
  
</mapper>







